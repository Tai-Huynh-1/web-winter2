1. What are the primitive data types in JS? - 5: string, boolean, number, null, undefined (symbols & bigInt)

2. What are the non-primitive data types in JS? - Object, arrays, functions

3. Why does Array.prototype.push() work on an array declared with 'const' keyword?
Ex: const myArr = []; Performing myArr.push(3) will result in => const myArr = [3]
We are not reassigning a different value to myArr

4. What gets hoisted in JavaScript? var, functions

5. What is the difference between the Array.prototype.forEach() vs. Array.prototype.map() method? map: shallow copy, returns new array and retains length of original array.

6. What is variable scoping in JavaScript? the visibility of a variable - limited to where variable can be accessed.
block scoped, function scoped, global scope.
What is closure? 

7. a function passed as argument to another function.

8. What are the different ways I can read from a JS object?
dot notation, bracket (key has to be a string) notation 

9. At any given time, can 2 or more functions be running (actually executing code, not just being idle) in the JS call stack?
no, only 1 running at any given time on the call stack. JS is single threaded

10. Given an array of numbers, write a function that takes in the given array and return the highest number from the array.
Ex: Passing in [32, 47, 1, 3, 5, 50, 9, 10] to the function will return 50 as it is the largest number.
Hint: Loop through the array and check each value. You should be storing a variable on the outside of the loop as well.

11. Given an array of letters (strings), write a function that takes in the given array and return the array in reverse.
Ex: Passing in ['h', 'e', 'l', 'l', 'o' ] should return ['o', 'l', 'l', 'e', 'h' ]
